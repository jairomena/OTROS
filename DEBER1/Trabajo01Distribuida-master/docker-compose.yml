version: '3.0'
services:
  postgres-sql:
    image: postgres:alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: distribuida
    ports:
      - "5434:5432"

  authors-service:
    image: luischisiquinga/app-authors:1.0.0
    environment:
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres-sql:5432/distribuida
      QUARKUS_DATASOURCE_USERNAME: postgres
      QUARKUS_DATASOURCE_PASSWORD: postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.authors-service.rule=PathPrefix(`/authors`)"
      - "traefik.http.routers.authors-service.entrypoints=web"
    depends_on:
      - postgres-sql
    expose:
      - 8080
    deploy:
      replicas: 2

  books-service:
    image: luischisiquinga/app-books:1.0.0
    environment:
      DB_CONNECTION_URL: jdbc:postgresql://postgres-sql:5432/distribuida
      BB_CONNECTION_USERNAME: postgres
      DB_CONNECTION_PASSWORD: postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.books-service.rule=PathPrefix(`/books`)"
      - "traefik.http.routers.books-service.entrypoints=web"
    depends_on:
      - authors-service
      - postgres-sql
    expose:
      - 7001
    deploy:
      replicas: 3

  app-cliente:
    image: luischisiquinga/app-cliente-spark:1.0.0
    depends_on:
      - books-service
    deploy:
      replicas: 1
    ports:
      - "9999:9999"

  traefik:
    image: traefik:v2.9
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "9090:80"
      - "8090:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

